diff -Nru portmap_5beta/BLURB portmap_5beta-new/BLURB
--- portmap_5beta/BLURB	1996-07-06 23:09:46.000000000 +0200
+++ portmap_5beta-new/BLURB	2003-03-13 18:20:08.000000000 +0100
@@ -1,3 +1,6 @@
+
+###############################################################################
+
 @(#) BLURB 1.5 96/07/06 23:09:45
 
 This is the fifth replacement portmapper release.
diff -Nru portmap_5beta/Makefile portmap_5beta-new/Makefile
--- portmap_5beta/Makefile	1996-07-06 23:06:19.000000000 +0200
+++ portmap_5beta-new/Makefile	2003-03-13 18:20:08.000000000 +0100
@@ -8,7 +8,7 @@
 # if you disagree. See `man 3 syslog' for examples. Some syslog versions
 # do not provide this flexibility.
 #
-FACILITY=LOG_MAIL
+FACILITY=LOG_DAEMON
 
 # To disable tcp-wrapper style access control, comment out the following
 # macro definitions.  Access control can also be turned off by providing
@@ -16,7 +16,8 @@
 # daemon, is always treated as an authorized host.
 
 HOSTS_ACCESS= -DHOSTS_ACCESS
-WRAP_LIB = $(WRAP_DIR)/libwrap.a
+#WRAP_LIB = $(WRAP_DIR)/libwrap.a
+WRAP_LIB = -lwrap
 
 # Comment out if your RPC library does not allocate privileged ports for
 # requests from processes with root privilege, or the new portmap will
@@ -71,7 +72,7 @@
 # With verbose logging on, HP-UX 9.x and AIX 4.1 leave zombies behind when
 # SIGCHLD is not ignored. Enable next macro for a fix.
 #
-# ZOMBIES = -DIGNORE_SIGCHLD	# AIX 4.x, HP-UX 9.x
+ZOMBIES = -DIGNORE_SIGCHLD	# AIX 4.x, HP-UX 9.x
 
 # Uncomment the following macro if your system does not have u_long.
 #
@@ -81,7 +82,7 @@
 # libwrap.a object library. WRAP_DIR should specify the directory with
 # that library.
 
-WRAP_DIR= ../tcp_wrappers
+WRAP_DIR= $(TCPD_DIR)
 
 # Auxiliary object files that may be missing from your C library.
 #
@@ -99,22 +100,31 @@
 
 # Comment out if your compiler talks ANSI and understands const
 #
-CONST   = -Dconst=
+#CONST   = -Dconst=
 
 ### End of configurable stuff.
 ##############################
 
+GLIBC=$(shell grep -s -c __GLIBC__ /usr/include/features.h)
+
+ifeq ($(GLIBC),0)
+LIBS   += # -lbsd
+else
+LIBS   += -lnsl
+endif
+
+
 SHELL	= /bin/sh
 
-COPT	= $(CONST) -Dperror=xperror $(HOSTS_ACCESS) $(CHECK_PORT) \
+COPT	= $(CONST) $(HOSTS_ACCESS) $(CHECK_PORT) \
 	$(SYS) -DFACILITY=$(FACILITY) $(ULONG) $(ZOMBIES) $(SA_LEN) \
 	$(LOOPBACK) $(SETPGRP)
-CFLAGS	= $(COPT) -O $(NSARCHS)
+CFLAGS	= -Wall $(COPT) -O2 $(NSARCHS)
 OBJECTS	= portmap.o pmap_check.o from_local.o $(AUX)
 
 all:	portmap pmap_dump pmap_set
 
-portmap: $(OBJECTS) $(WRAP_DIR)/libwrap.a
+portmap: $(OBJECTS) # $(WRAP_DIR)/libwrap.a
 	$(CC) $(CFLAGS) -o $@ $(OBJECTS) $(WRAP_LIB) $(LIBS)
 
 pmap_dump: pmap_dump.c
@@ -129,6 +139,17 @@
 get_myaddress: get_myaddress.c
 	cc $(CFLAGS) -DTEST -o $@ get_myaddress.c $(LIBS)
 
+install: all
+	install -o root -g root -m 0755 -s portmap ${BASEDIR}/sbin
+	install -o root -g root -m 0755 -s pmap_dump ${BASEDIR}/sbin
+	install -o root -g root -m 0755 -s pmap_set ${BASEDIR}/sbin
+	install -o root -g root -m 0644 portmap.8 ${BASEDIR}/usr/share/man/man8
+	install -o root -g root -m 0644 pmap_dump.8 ${BASEDIR}/usr/share/man/man8
+	install -o root -g root -m 0644 pmap_set.8 ${BASEDIR}/usr/share/man/man8
+	cat README BLURB >${BASEDIR}/usr/share/doc/portmap/portmapper.txt
+	gzip -9f ${BASEDIR}/usr/share/doc/portmap/portmapper.txt
+
+
 lint:	
 	lint $(COPT) $(OBJECTS:%.o=%.c)
 
diff -Nru portmap_5beta/daemon.c portmap_5beta-new/daemon.c
--- portmap_5beta/daemon.c	1992-06-11 22:53:12.000000000 +0200
+++ portmap_5beta-new/daemon.c	2003-03-13 18:20:08.000000000 +0100
@@ -36,11 +36,8 @@
 #endif /* LIBC_SCCS and not lint */
 
 #include <fcntl.h>
-
-/* From unistd.h */
-#define STDIN_FILENO	0
-#define STDOUT_FILENO	1
-#define STDERR_FILENO	2
+#include <unistd.h>
+#include <sys/types.h>
 
 /* From paths.h */
 #define _PATH_DEVNULL	"/dev/null"
diff -Nru portmap_5beta/debian/changelog portmap_5beta-new/debian/changelog
--- portmap_5beta/debian/changelog	1970-01-01 01:00:00.000000000 +0100
+++ portmap_5beta-new/debian/changelog	2003-03-13 18:20:08.000000000 +0100
@@ -0,0 +1,17 @@
+portmap (5-2) unstable; urgency=low
+
+  * Fix from_local.c to declare some functions it uses correctly. Thanks
+    to Bdale Garbee. (Closes: Bug#90090)
+  * Add -Wall to CFLAGS, and fix most of the warnings it comes up with.
+
+ -- Anthony Towns <aj@azure.humbug.org.au>  Sun, 18 Mar 2001 19:04:25 +1000
+
+portmap (5-1) unstable; urgency=low
+
+  * Initial Release.
+
+ -- Anthony Towns <ajt@debian.org>  Sat,  5 Aug 2000 22:08:49 +1000
+
+Local variables:
+mode: debian-changelog
+End:
diff -Nru portmap_5beta/debian/conffiles portmap_5beta-new/debian/conffiles
--- portmap_5beta/debian/conffiles	1970-01-01 01:00:00.000000000 +0100
+++ portmap_5beta-new/debian/conffiles	2003-03-13 18:20:08.000000000 +0100
@@ -0,0 +1 @@
+/etc/init.d/portmap
diff -Nru portmap_5beta/debian/control portmap_5beta-new/debian/control
--- portmap_5beta/debian/control	1970-01-01 01:00:00.000000000 +0100
+++ portmap_5beta-new/debian/control	2003-03-13 18:20:08.000000000 +0100
@@ -0,0 +1,17 @@
+Source: portmap
+Section: net
+Priority: standard
+Maintainer: Anthony Towns <ajt@debian.org>
+Standards-Version: 3.1.1
+Build-Depends: libwrap-dev, debhelper
+
+Package: portmap
+Architecture: any
+Depends: ${shlibs:Depends}
+Replaces: netbase (<< 4.00)
+Description: The RPC portmapper
+ Portmap is a server that converts RPC (Remote Procedure Call) program
+ numbers into DARPA protocol port numbers.  It must be running in order
+ to make RPC calls.
+ .
+ Services that use RPC include NFS and NIS.
diff -Nru portmap_5beta/debian/copyright portmap_5beta-new/debian/copyright
--- portmap_5beta/debian/copyright	1970-01-01 01:00:00.000000000 +0100
+++ portmap_5beta-new/debian/copyright	2003-03-13 18:20:08.000000000 +0100
@@ -0,0 +1,46 @@
+This package was debianized by Anthony Towns <ajt@debian.org> on
+Sat,  5 Aug 2000 22:08:49 +1000.
+
+It was downloaded from ftp://ftp.win.tue.nl/pub/security/
+
+Upstream Author(s): Wietse Venema
+
+Copyright:
+
+Most of the files, fall under the following copyright, and are distributable
+under the terms of the BSD license (/usr/share/common-licenses/BSD):
+
+ * Copyright (c) 1983,1991 The Regents of the University of California.
+ * All rights reserved.
+
+Some of the RPC code, is copyrighted by Sun Microsystems, and is provided
+under the following terms:
+
+ * Sun RPC is a product of Sun Microsystems, Inc. and is provided for
+ * unrestricted use provided that this legend is included on all tape
+ * media and as a part of the software program in whole or part.  Users
+ * may copy or modify Sun RPC without charge, but are not authorized
+ * to license or distribute it to anyone else except as part of a product or
+ * program developed by the user or with the express written consent of
+ * Sun Microsystems, Inc.
+ *
+ * SUN RPC IS PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND INCLUDING THE
+ * WARRANTIES OF DESIGN, MERCHANTIBILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE OR TRADE PRACTICE.
+ *
+ * Sun RPC is provided with no support and without any obligation on the
+ * part of Sun Microsystems, Inc. to assist in its use, correction,
+ * modification or enhancement.
+ *
+ * SUN MICROSYSTEMS, INC. SHALL HAVE NO LIABILITY WITH RESPECT TO THE
+ * INFRINGEMENT OF COPYRIGHTS, TRADE SECRETS OR ANY PATENTS BY SUN RPC
+ * OR ANY PART THEREOF.
+ *
+ * In no event will Sun Microsystems, Inc. be liable for any lost revenue
+ * or profits or other special, indirect and consequential damages, even if
+ * Sun has been advised of the possibility of such damages.
+ *
+ * Sun Microsystems, Inc.
+ * 2550 Garcia Avenue
+ * Mountain View, California  94043
+
diff -Nru portmap_5beta/debian/dirs portmap_5beta-new/debian/dirs
--- portmap_5beta/debian/dirs	1970-01-01 01:00:00.000000000 +0100
+++ portmap_5beta-new/debian/dirs	2003-03-13 18:20:08.000000000 +0100
@@ -0,0 +1,4 @@
+bin
+sbin
+usr/share/man/man8
+usr/share/doc/portmap
diff -Nru portmap_5beta/debian/docs portmap_5beta-new/debian/docs
--- portmap_5beta/debian/docs	1970-01-01 01:00:00.000000000 +0100
+++ portmap_5beta-new/debian/docs	2003-03-13 18:20:08.000000000 +0100
@@ -0,0 +1 @@
+README
diff -Nru portmap_5beta/debian/init.d portmap_5beta-new/debian/init.d
--- portmap_5beta/debian/init.d	1970-01-01 01:00:00.000000000 +0100
+++ portmap_5beta-new/debian/init.d	2003-03-13 18:20:08.000000000 +0100
@@ -0,0 +1,50 @@
+#!/bin/sh
+#
+# start/stop portmap daemon.
+
+test -f /sbin/portmap || exit 0
+
+case "$1" in
+    start)
+	echo -n "Starting portmap daemon:"
+	echo -n " portmap"
+        start-stop-daemon --start --quiet --exec /sbin/portmap
+	echo "."
+
+	if [ -f /var/run/portmap.upgrade-state ]; then
+          echo -n "Restoring old RPC service information..."
+          sleep 1 # needs a short pause or pmap_set won't work. :(
+	  pmap_set </var/run/portmap.upgrade-state
+	  rm -f /var/run/portmap.upgrade-state
+          echo "done."
+        fi
+
+	;;
+    stop)
+        echo -n "Stopping portmap daemon:"
+        echo -n " portmap" ; start-stop-daemon --stop --quiet --oknodo --exec /sbin/portmap
+        echo "."
+	;;
+    reload)
+	;;
+    force-reload)
+        $0 restart
+	;;
+    restart)
+	pmap_dump >/var/run/portmap.state
+        $0 stop
+        $0 start
+	if [ ! -f /var/run/portmap.upgrade-state ]; then
+          sleep 1
+	  pmap_set </var/run/portmap.state
+	fi
+	rm -f /var/run/portmap.state
+	;;
+    *)
+	echo "Usage: /etc/init.d/portmap {start|stop|reload|restart}"
+	exit 1
+	;;
+esac
+
+exit 0
+
diff -Nru portmap_5beta/debian/prerm portmap_5beta-new/debian/prerm
--- portmap_5beta/debian/prerm	1970-01-01 01:00:00.000000000 +0100
+++ portmap_5beta-new/debian/prerm	2003-03-13 18:20:08.000000000 +0100
@@ -0,0 +1,8 @@
+#!/bin/sh -e
+
+if [ "$1" = "upgrade" ]; then
+	# save portmap state; will be reread when portmap start is run
+	pmap_dump >/var/run/portmap.upgrade-state
+fi
+
+##DEBHELPER##
diff -Nru portmap_5beta/debian/rules portmap_5beta-new/debian/rules
--- portmap_5beta/debian/rules	1970-01-01 01:00:00.000000000 +0100
+++ portmap_5beta-new/debian/rules	2003-03-13 18:20:08.000000000 +0100
@@ -0,0 +1,85 @@
+#!/usr/bin/make -f
+# Sample debian/rules that uses debhelper.
+# GNU copyright 1997 to 1999 by Joey Hess.
+
+# Uncomment this to turn on verbose mode.
+#export DH_VERBOSE=1
+
+# This is the debhelper compatability version to use.
+export DH_COMPAT=1
+
+configure: configure-stamp
+configure-stamp:
+	dh_testdir
+	# Add here commands to configure the package.
+	
+
+	touch configure-stamp
+
+build: configure-stamp build-stamp
+build-stamp:
+	dh_testdir
+
+	# Add here commands to compile the package.
+	$(MAKE)
+	#/usr/bin/docbook-to-man debian/portmap.sgml > portmap.1
+
+	touch build-stamp
+
+clean:
+	dh_testdir
+	dh_testroot
+	rm -f build-stamp configure-stamp
+
+	# Add here commands to clean up after the build process.
+	-$(MAKE) clean
+
+	dh_clean
+
+install: build
+	dh_testdir
+	dh_testroot
+	dh_clean -k
+	dh_installdirs
+
+	# Add here commands to install the package into debian/tmp.
+	$(MAKE) install BASEDIR=`pwd`/debian/tmp
+
+
+# Build architecture-independent files here.
+binary-indep: build install
+# We have nothing to do by default.
+
+# Build architecture-dependent files here.
+binary-arch: build install
+#	dh_testversion
+	dh_testdir
+	dh_testroot
+#	dh_installdebconf	
+	dh_installdocs
+	dh_installexamples
+	dh_installmenu
+#	dh_installemacsen
+#	dh_installpam
+	dh_installinit -- start 41 S . start 10 0 6 .
+	dh_installcron
+	dh_installmanpages
+	dh_installinfo
+#	dh_undocumented
+	dh_installchangelogs CHANGES
+	dh_link
+	dh_strip
+	dh_compress
+	dh_fixperms
+	# You may want to make some executables suid here.
+	dh_suidregister
+#	dh_makeshlibs
+	dh_installdeb
+#	dh_perl
+	dh_shlibdeps
+	dh_gencontrol
+	dh_md5sums
+	dh_builddeb
+
+binary: binary-indep binary-arch
+.PHONY: build clean binary-indep binary-arch binary install
diff -Nru portmap_5beta/from_local.c portmap_5beta-new/from_local.c
--- portmap_5beta/from_local.c	1996-05-31 15:52:58.000000000 +0200
+++ portmap_5beta-new/from_local.c	2003-03-13 18:20:08.000000000 +0100
@@ -51,6 +51,9 @@
 #include <net/if.h>
 #include <sys/ioctl.h>
 #include <syslog.h>
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
 
 #ifndef TRUE
 #define	TRUE	1
diff -Nru portmap_5beta/pmap_check.c portmap_5beta-new/pmap_check.c
--- portmap_5beta/pmap_check.c	1996-07-07 10:49:10.000000000 +0200
+++ portmap_5beta-new/pmap_check.c	2003-03-13 18:20:08.000000000 +0100
@@ -45,6 +45,9 @@
 #include <netinet/in.h>
 #include <rpc/rpcent.h>
 #endif
+#include <sys/types.h>
+#include <unistd.h>
+#include <tcpd.h>
 
 extern char *inet_ntoa();
 
diff -Nru portmap_5beta/pmap_dump.8 portmap_5beta-new/pmap_dump.8
--- portmap_5beta/pmap_dump.8	1970-01-01 01:00:00.000000000 +0100
+++ portmap_5beta-new/pmap_dump.8	2003-03-13 18:20:08.000000000 +0100
@@ -0,0 +1,24 @@
+.TH PMAP_DUMP 8 "21th June 1997" Linux "Linux Programmer's Manual"
+.SH NAME
+pmap_dump \- print a list of all registered RPC programs
+.SH SYNOPSIS
+.B pmap_dump
+.SH DESCRIPTION
+The
+.B pmap_dump
+command can be used to restart a running portmapper or to print
+a list of all registered RPC programs on the local host. If you
+want to use the program to restart the portmapper you have to
+redirect the output of
+.B pmap_dump
+to a file. After this you can restart the portmapper and restore
+the list of the registered RPC programs by feeding the output
+of
+.B pmap_dump
+to the
+.B pmap_set
+command.
+.SH SEE ALSO
+.BR pmap_set (8),
+.BR rpc.portmap (8)
+
diff -Nru portmap_5beta/pmap_dump.c portmap_5beta-new/pmap_dump.c
--- portmap_5beta/pmap_dump.c	1992-06-11 22:53:16.000000000 +0200
+++ portmap_5beta-new/pmap_dump.c	2003-03-13 18:20:08.000000000 +0100
@@ -23,6 +23,19 @@
 
 static char *protoname();
 
+#ifndef INADDR_LOOPBACK
+#define INADDR_LOOPBACK ntohl(inet_addr("127.0.0.1"))
+#endif
+
+static void    get_myloopaddress(addrp)
+struct sockaddr_in *addrp;
+{
+    memset((char *) addrp, 0, sizeof(*addrp));
+    addrp->sin_family = AF_INET;
+    addrp->sin_port = htons(PMAPPORT);
+    addrp->sin_addr.s_addr = htonl(INADDR_LOOPBACK);
+}
+
 main(argc, argv)
 int     argc;
 char  **argv;
@@ -31,7 +44,7 @@
     register struct pmaplist *list;
     register struct rpcent *rpc;
 
-    get_myaddress(&addr);
+    get_myloopaddress(&addr);
 
     for (list = pmap_getmaps(&addr); list; list = list->pml_next) {
 	rpc = getrpcbynumber((int) list->pml_map.pm_prog);
diff -Nru portmap_5beta/pmap_set.8 portmap_5beta-new/pmap_set.8
--- portmap_5beta/pmap_set.8	1970-01-01 01:00:00.000000000 +0100
+++ portmap_5beta-new/pmap_set.8	2003-03-13 18:20:08.000000000 +0100
@@ -0,0 +1,24 @@
+.TH PMAP_SET 8 "21th June 1997" Linux "Linux Programmer's Manual"
+.SH NAME
+pmap_set \- set the list of registered RPC programs
+.SH SYNOPSIS
+.B pmap_set
+.SH DESCRIPTION
+The
+.B pmap_set
+command can be used to restart a running portmapper or to set
+the list of registered RPC programs on the local host. If you
+want to use the program to restart the portmapper you have to
+redirect the output of
+.B pmap_dump
+to a file. After this you can restart the portmapper and restore
+the list of the registered RPC programs by feeding the output
+of
+.B pmap_dump
+to the
+.B pmap_set
+command.
+.SH SEE ALSO
+.BR pmap_dump (8),
+.BR rpc.portmap (8)
+
diff -Nru portmap_5beta/pmap_set.c portmap_5beta-new/pmap_set.c
--- portmap_5beta/pmap_set.c	1996-07-06 23:06:23.000000000 +0200
+++ portmap_5beta-new/pmap_set.c	2003-03-13 18:20:08.000000000 +0100
@@ -47,9 +47,9 @@
 int    *prot;
 unsigned *port;
 {
-    char    proto_name[BUFSIZ];
+    char    proto_name[256];
 
-    if (sscanf(buf, "%lu %lu %s %u", prog, vers, proto_name, port) != 4) {
+    if (sscanf(buf, "%lu %lu %255s %u", prog, vers, proto_name, port) != 4) {
 	return (0);
     }
     if (strcmp(proto_name, "tcp") == 0) {
diff -Nru portmap_5beta/portmap.8 portmap_5beta-new/portmap.8
--- portmap_5beta/portmap.8	1970-01-01 01:00:00.000000000 +0100
+++ portmap_5beta-new/portmap.8	2003-03-13 18:20:08.000000000 +0100
@@ -0,0 +1,146 @@
+.\" Copyright (c) 1987 Sun Microsystems
+.\" Copyright (c) 1990, 1991 The Regents of the University of California.
+.\" All rights reserved.
+.\"
+.\" Redistribution and use in source and binary forms, with or without
+.\" modification, are permitted provided that the following conditions
+.\" are met:
+.\" 1. Redistributions of source code must retain the above copyright
+.\"    notice, this list of conditions and the following disclaimer.
+.\" 2. Redistributions in binary form must reproduce the above copyright
+.\"    notice, this list of conditions and the following disclaimer in the
+.\"    documentation and/or other materials provided with the distribution.
+.\" 3. All advertising materials mentioning features or use of this software
+.\"    must display the following acknowledgement:
+.\"	This product includes software developed by the University of
+.\"	California, Berkeley and its contributors.
+.\" 4. Neither the name of the University nor the names of its contributors
+.\"    may be used to endorse or promote products derived from this software
+.\"    without specific prior written permission.
+.\"
+.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
+.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+.\" SUCH DAMAGE.
+.\"
+.\"     from: @(#)portmap.8	5.3 (Berkeley) 3/16/91
+.\"	
+.\"
+.Dd March 16, 1991
+.Dt PORTMAP 8
+.Os BSD 4.3
+.Sh NAME
+.Nm portmap
+.Nd
+.Tn DARPA
+port to
+.Tn RPC
+program number mapper
+.Sh SYNOPSIS
+.Nm portmap
+.Op Fl d
+.Op Fl v
+.Sh DESCRIPTION
+.Nm Portmap
+is a server that converts
+.Tn RPC
+program numbers into
+.Tn DARPA
+protocol port numbers.
+It must be running in order to make
+.Tn RPC
+calls.
+.Pp
+When an
+.Tn RPC
+server is started, it will tell
+.Nm portmap
+what port number it is listening to, and what
+.Tn RPC
+program numbers it is prepared to serve.
+When a client wishes to make an
+.Tn RPC
+call to a given program number,
+it will first contact
+.Nm portmap
+on the server machine to determine
+the port number where
+.Tn RPC
+packets should be sent.
+.Pp
+.Nm Portmap
+must be started before any
+.Tn RPC
+servers are invoked.
+.Pp
+Normally
+.Nm portmap
+forks and dissociates itself from the terminal
+like any other daemon.
+.Nm Portmap
+then logs errors using
+.Xr syslog 3 .
+.Pp
+Option available:
+.Bl -tag -width Ds
+.It Fl d
+(debug) prevents
+.Nm portmap
+from running as a daemon,
+and causes errors and debugging information
+to be printed to the standard error output.
+.It Fl v
+(verbose) run
+.Nm portmap
+in verbose mode.
+.El
+
+This
+.Nm portmap
+version is protected by the
+.Nm tcp_wrapper
+library. You have to give the clients access to
+.Nm portmap
+if they should be allowed to use it. To allow connects from clients of
+the .bar.com domain you could use the following line in /etc/hosts.allow:
+
+portmap: .bar.com
+
+You have to use the daemon name 
+.Nm portmap
+for the daemon name (even if the binary has a different name). For the
+client names you can only use the keyword ALL or IP addresses (NOT
+host or domain names).
+
+For further information please have a look at the
+.Xr tcpd 8 ,
+.Xr hosts_allow 5
+and
+.Xr hosts_access 5
+manual pages.
+
+.Sh SEE ALSO
+.Xr inetd.conf 5 ,
+.Xr rpcinfo 8 ,
+.Xr pmap_set 8 ,
+.Xr pmap_dump 8 ,
+.Xr inetd 8
+.Xr tcpd 8
+.Xr hosts_access 5
+.Xr hosts_options 5
+.Sh BUGS
+If
+.Nm portmap
+crashes, all servers must be restarted.
+.Sh HISTORY
+The
+.Nm
+command appeared in
+.Bx 4.3
diff -Nru portmap_5beta/portmap.c portmap_5beta-new/portmap.c
--- portmap_5beta/portmap.c	1996-07-06 23:06:24.000000000 +0200
+++ portmap_5beta-new/portmap.c	2003-03-13 18:20:25.000000000 +0100
@@ -80,6 +80,9 @@
  * Mountain View, California  94043
  */
 
+#if defined(__GLIBC__)
+#include <rpc/xdr.h>
+#endif /* __GLIBC__ */
 #include <rpc/rpc.h>
 #include <rpc/pmap_prot.h>
 #include <stdio.h>
@@ -94,6 +97,8 @@
 #ifdef SYSV40
 #include <netinet/in.h>
 #endif
+#include <sys/types.h>
+#include <unistd.h>
 
 extern char *strerror();
 #include <stdlib.h>
@@ -124,7 +129,7 @@
 static void callit();
 struct pmaplist *pmaplist;
 int debugging = 0;
-extern int errno;
+#include <errno.h>
 
 #include "pmap_check.h"
 
@@ -350,7 +355,7 @@
 		 */
 		/* remote host authorization check */
 		check_default(svc_getcaller(xprt), rqstp->rq_proc, (u_long) 0);
-		if (!svc_sendreply(xprt, xdr_void, (caddr_t)0) && debugging) {
+		if (!svc_sendreply(xprt, (xdrproc_t) xdr_void, (caddr_t)0) && debugging) {
 			abort();
 		}
 		break;
@@ -359,7 +364,7 @@
 		/*
 		 * Set a program,version to port mapping
 		 */
-		if (!svc_getargs(xprt, xdr_pmap, &reg))
+		if (!svc_getargs(xprt, (xdrproc_t) xdr_pmap, (caddr_t) &reg))
 			svcerr_decode(xprt);
 		else {
 			/* reject non-local requests, protect priv. ports */
@@ -401,7 +406,7 @@
 				ans = 1;
 			}
 		done:
-			if ((!svc_sendreply(xprt, xdr_int, (caddr_t)&ans)) &&
+			if ((!svc_sendreply(xprt, (xdrproc_t) xdr_int, (caddr_t)&ans)) &&
 			    debugging) {
 				(void) fprintf(stderr, "svc_sendreply\n");
 				abort();
@@ -413,7 +418,7 @@
 		/*
 		 * Remove a program,version to port mapping.
 		 */
-		if (!svc_getargs(xprt, xdr_pmap, &reg))
+		if (!svc_getargs(xprt, (xdrproc_t) xdr_pmap, (caddr_t) &reg))
 			svcerr_decode(xprt);
 		else {
 			ans = 0;
@@ -447,7 +452,7 @@
 					prevpml->pml_next = pml;
 				free(t);
 			}
-			if ((!svc_sendreply(xprt, xdr_int, (caddr_t)&ans)) &&
+			if ((!svc_sendreply(xprt, (xdrproc_t) xdr_int, (caddr_t)&ans)) &&
 			    debugging) {
 				(void) fprintf(stderr, "svc_sendreply\n");
 				abort();
@@ -459,7 +464,7 @@
 		/*
 		 * Lookup the mapping for a program,version and return its port
 		 */
-		if (!svc_getargs(xprt, xdr_pmap, &reg))
+		if (!svc_getargs(xprt, (xdrproc_t) xdr_pmap, (caddr_t) &reg))
 			svcerr_decode(xprt);
 		else {
 			/* remote host authorization check */
@@ -474,7 +479,7 @@
 				port = fnd->pml_map.pm_port;
 			else
 				port = 0;
-			if ((!svc_sendreply(xprt, xdr_int, (caddr_t)&port)) &&
+			if ((!svc_sendreply(xprt, (xdrproc_t) xdr_int, (caddr_t)&port)) &&
 			    debugging) {
 				(void) fprintf(stderr, "svc_sendreply\n");
 				abort();
@@ -486,7 +491,7 @@
 		/*
 		 * Return the current set of mapped program,version
 		 */
-		if (!svc_getargs(xprt, xdr_void, NULL))
+		if (!svc_getargs(xprt, (xdrproc_t) xdr_void, (caddr_t) NULL))
 			svcerr_decode(xprt);
 		else {
 			/* remote host authorization check */
@@ -497,7 +502,7 @@
 			} else {
 				p = pmaplist;
 			}
-			if ((!svc_sendreply(xprt, xdr_pmaplist,
+			if ((!svc_sendreply(xprt, (xdrproc_t) xdr_pmaplist,
 			    (caddr_t)&p)) && debugging) {
 				(void) fprintf(stderr, "svc_sendreply\n");
 				abort();
@@ -645,7 +650,7 @@
 	timeout.tv_sec = 5;
 	timeout.tv_usec = 0;
 	a.rmt_args.args = buf;
-	if (!svc_getargs(xprt, xdr_rmtcall_args, &a))
+	if (!svc_getargs(xprt, (xdrproc_t) xdr_rmtcall_args, (caddr_t) &a))
 		return;
 	/* host and service access control */
 	if (!check_callit(svc_getcaller(xprt), 
@@ -674,9 +679,9 @@
 			   au->aup_uid, au->aup_gid, au->aup_len, au->aup_gids);
 		}
 		a.rmt_port = (u_long)port;
-		if (clnt_call(client, a.rmt_proc, xdr_opaque_parms, &a,
-		    xdr_len_opaque_parms, &a, timeout) == RPC_SUCCESS) {
-			svc_sendreply(xprt, xdr_rmtcall_result, (caddr_t)&a);
+		if (clnt_call(client, a.rmt_proc, (xdrproc_t) xdr_opaque_parms, (char*) &a,
+		    (xdrproc_t) xdr_len_opaque_parms, (char*) &a, timeout) == RPC_SUCCESS) {
+			svc_sendreply(xprt, (xdrproc_t) xdr_rmtcall_result, (caddr_t)&a);
 		}
 		AUTH_DESTROY(client->cl_auth);
 		clnt_destroy(client);
